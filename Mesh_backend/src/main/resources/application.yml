server:
  port : 8081
  spring:
    redis:
      host: 210.94.220.228  # Ubuntu 서버의 외부 IP
      port: 6379           # Redis 기본 포트


spring :
  config:
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url : ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate.dialect: org.hibernate.dialect.MySQLDialect
  task:
    scheduling:
      pool:
        size: 10

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_ID}
            client-secret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_SECRET}
            redirect-uri: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_REDIRECT_URI}
            authorization-grant-type: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_AUTHORIZATION_GRANT_TYPE}
            client-name: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENT_NAME}
            scope: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_SCOPE}

        provider:
          kakao:
            authorization-uri: ${SPRING_SECURITY_OAUTH2_PROVIDER_KAKAO_AUTHORIZATION_URI}
            token-uri: ${SPRING_SECURITY_OAUTH2_PROVIDER_KAKAO_TOKEN_URI}
            user-info-uri: ${SPRING_SECURITY_OAUTH2_PROVIDER_KAKAO_USER_INFO_URI}
            user-name-attribute: ${SPRING_SECURITY_OAUTH2_PROVIDER_KAKAO_USER_NAME_ATTRIBUTE}

kakao:
  admin-key: ${KAKAO_ADMIN_KEY}

cloud:
  aws:
    s3:
      bucket: meshproject-s3-bucket
    credentials:
      access-key: ${S3ACCESSKEY}
      secret-key: ${S3SECRETKEY}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false


jwt:
  secret-key: ${JWT_SECRET_KEY}

logging:
  level:
    org.springframework.web: DEBUG
    org.hibernate.type: TRACE

